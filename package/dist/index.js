"use strict";var i=Object.defineProperty;var o=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var f=Object.prototype.hasOwnProperty;var h=(s,e)=>{for(var r in e)i(s,r,{get:e[r],enumerable:!0})},l=(s,e,r,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of u(e))!f.call(s,n)&&n!==r&&i(s,n,{get:()=>e[n],enumerable:!(t=o(e,n))||t.enumerable});return s};var y=s=>l(i({},"__esModule",{value:!0}),s);var d={};h(d,{default:()=>a});module.exports=y(d);var a=class s extends Map{get size(){return super.size}map(e){let r=[];for(let[t,n]of this)r.push(e(n,t,this));return r}mapVal(e){let r=this.values();return Array.from({length:this.size},()=>{let{value:t,done:n}=r.next();if(!(n||t===void 0))return e(t,t,this)}).filter(t=>t!==void 0)}first(){if(!(this.size<=0))return this.values().next().value}find(e){for(let[r,t]of this)if(e(t,r,this))return t}filter(e){let r=new s;for(let[t,n]of this)e(n,t,this)&&r.set(t,n);return r}filterKey(e){let r=new s;for(let[t,n]of this)e(t)&&r.set(t,n);return r}last(){if(!(this.size<=0))return Array.from(this.values())[Array.from(this.values()).length-1]}lastKey(){let e=Array.from(this.keys());return e[e.length-1]}tap(e){return e(this),this}has(e){return super.has(e)}array(){return Array.from(this.values())}keyArray(){return Array.from(this.keys())}hasAll(...e){return Array.isArray(e[0])?e[0].every(r=>super.has(r)):e.every(r=>super.has(r))}hasAny(...e){return Array.isArray(e[0])?e[0]?.some(r=>super.has(r)):e?.some(r=>super.has(r))}some(e){for(let[r,t]of this.entries())if(e(t,r,this))return!0;return!1}random(){let e=Array.from(this.values());return e[Math.floor(Math.random()*e.length)]}remove(e){return this.has(e)?(this.delete(e),!0):!1}removeByValue(e){for(let[r,t]of this)e(t,r,this)&&this.delete(r)}get(e){return super.get(e)}every(e){for(let[r,t]of this)if(!e(t,r,this))return!1;return!0}each(e){return this.forEach((r,t)=>e(r,t,this)),this}randomKey(){let e=Array.from(this.keys());return e[Math.floor(Math.random()*e.length)]}equals(e){if(!e||this.size!==e.size)return!1;if(this===e)return!0;for(let[r,t]of this)if(!e.has(r)||t!==e.get(r))return!1;return!0}difference(e){return this.size!==e.size?`size difference by: ${Math.abs(this.size-e.size)}`:Array.from(e.keys()).filter(r=>!this.has(r))}findKey(e){for(let[r,t]of this)if(e(t,r,this))return r}sort(e=s.defaultCompareFunction){let r=[...this.entries()];r.sort((t,n)=>e(t[1],n[1])),super.clear();for(let[t,n]of r)super.set(t,n);return this}clear(){super.clear()}at(e=0){return this.array()[e]}static defaultCompareFunction(e,r){return e===r?0:e>r?1:-1}};
